// <auto-generated />
using System;
using CanoeSharingSystemWebAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CanoeSharingSystemWebAPI.Migrations
{
    [DbContext(typeof(CanoeSharingAPIDbContext))]
    [Migration("20250416111943_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BookingEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BookingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ListingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AvailabilityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AvailabilityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RentalStoreId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentalStoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.RentalStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RentalStores");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Booking", b =>
                {
                    b.HasOne("CanoeSharingSystemWebAPI.Entities.Listing", "Listing")
                        .WithMany("Bookings")
                        .HasForeignKey("ListingId");

                    b.HasOne("CanoeSharingSystemWebAPI.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId");

                    b.Navigation("Listing");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Listing", b =>
                {
                    b.HasOne("CanoeSharingSystemWebAPI.Entities.RentalStore", "RentalStore")
                        .WithMany("Listings")
                        .HasForeignKey("RentalStoreId");

                    b.HasOne("CanoeSharingSystemWebAPI.Entities.User", "User")
                        .WithMany("Listings")
                        .HasForeignKey("UserId");

                    b.Navigation("RentalStore");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Review", b =>
                {
                    b.HasOne("CanoeSharingSystemWebAPI.Entities.Booking", "Booking")
                        .WithMany("Reviews")
                        .HasForeignKey("BookingId");

                    b.HasOne("CanoeSharingSystemWebAPI.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Booking", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.Listing", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.RentalStore", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("CanoeSharingSystemWebAPI.Entities.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Listings");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
